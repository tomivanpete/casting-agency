{
	"info": {
		"_postman_id": "3d464a0e-5413-4a09-9642-d1242277aa07",
		"name": "casting-agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "assistant",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Return of the Jedi\",\n    \"releaseDate\": \"1983-05-25\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkpEOGNLVEhFVlR1NkowajhwSjl6TCJ9.eyJpc3MiOiJodHRwczovL2Rldi10eDU5azdhYy51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjA1NTY4OGVhYTc4MDMwMDZhMjA4Zjg2IiwiYXVkIjoiY2FzdGluZ2FnZW5jeSIsImlhdCI6MTYxNjgyMDY5NywiZXhwIjoxNjE3NDI1NDk3LCJhenAiOiJwdTRwWXdhb056UEZsNTI0RkJaYmtrTmF0dGNPNnJOOSIsImd0eSI6InBhc3N3b3JkIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9yLWRldGFpbCIsImdldDphY3RvcnMiLCJnZXQ6bW92aWUtZGV0YWlsIiwiZ2V0Om1vdmllcyJdfQ.k4Gs2BcTfbDedZQ8ri_DfdDIpkuKX-oxlh8XycaF49ejsrf8d7N-FTEs_YMEKmldNlEZHjhe24-UBgsb3-o9DfYiqEoKLnMcsTaSjALre_4RpQfXvPjQouTrnulHBhwxRY4cITaZy6sRvurlvAbAkOJQvBY5z_e1c4wJLRuqNk23uQe76QX1z_RF4GCglXLhmtGYlOMAoSoIOmcKZ_fAeEKWJNEbRrLFuJd-Oqg9jN8JhlPpb3D7nqsvpCQqb3WcVmGkza94Xj2A0ej-YEI8ZgMNPPLu6J6zO6TtVuJj5YR1v6y1Rfu0f6bZSJHMSDIqtIKoIInALQcQlrxkCMiFDA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "director",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Return of the Jedi\",\n    \"releaseDate\": \"1983-05-25\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response contains created ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.created).to.be.a(\"number\");",
									"});",
									"",
									"var directorActorId = pm.response.json().created;",
									"pm.collectionVariables.set(\"directorActorId\", directorActorId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kevin Costner\",\n    \"age\": 66,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains movie ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie.id).to.be.a(\"number\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Shawshank Redemption\",\n    \"releaseDate\": \"1994-10-14\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<actor_id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var directorActorId = pm.collectionVariables.get(\"directorActorId\");",
									"pm.test(\"Response contains actor ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor.id).to.eql(directorActorId);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Peter Postman\",\n    \"age\": 28,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/{{directorActorId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{directorActorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<actor_id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var directorActorId = pm.collectionVariables.get(\"directorActorId\");",
									"pm.test(\"Response contains deleted ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.deleted).to.eql(directorActorId);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{directorActorId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{directorActorId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkpEOGNLVEhFVlR1NkowajhwSjl6TCJ9.eyJpc3MiOiJodHRwczovL2Rldi10eDU5azdhYy51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjA1NTY5MGE0MWI4OTcwMDY5MDI4OTVhIiwiYXVkIjoiY2FzdGluZ2FnZW5jeSIsImlhdCI6MTYxNjgyMDY5NywiZXhwIjoxNjE3NDI1NDk3LCJhenAiOiJwdTRwWXdhb056UEZsNTI0RkJaYmtrTmF0dGNPNnJOOSIsImd0eSI6InBhc3N3b3JkIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3Rvci1kZXRhaWwiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllLWRldGFpbCIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyJdfQ.GUq-jn1Y2bIWn3zhF_3SV_YlRVogWxwamXM9e8PNx4ySBwJlv6njVqdJV6I7HuqKpISGVOC9HcX0d1s3bBuuS9cutcj-ka5hUy5VUBDkCMAZo2Dl23nxe86L47g3wowtJ-KXWWx8qX1srNxFssxGNbtuD13enKmhv6uVo8wHCoEbxEr8CQA9g5zV-DbOIeo14dIxBQUsvKi2e6Ylai7ePHNf947byc9lsgA7EGgGL-8PYVC9iQd7rIg3ndBcEedWG8Few-_rxnOZ-yHJBoCFfDMnBdfYUFDvAeeP4I4kry10vWQczbZRUNeYBx4tcf1yVOIYF3hfxPMmIPsqSFbMSg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "producer",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response contains created ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.created).to.be.a(\"number\");",
									"});",
									"",
									"var producerMovieId = pm.response.json().created;",
									"pm.collectionVariables.set(\"producerMovieId\", producerMovieId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Postman\",\n    \"releaseDate\": \"1997-12-25\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response contains created ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.created).to.be.a(\"number\");",
									"});",
									"",
									"var producerActorId = pm.response.json().created;",
									"pm.collectionVariables.set(\"producerActorId\", producerActorId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kevin Costner\",\n    \"age\": 66,\n    \"gender\": \"M\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<movie_id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var producerMovieId = pm.collectionVariables.get(\"producerMovieId\");",
									"pm.test(\"Response contains movie ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie.id).to.eql(producerMovieId);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Postmann\",\n    \"releaseDate\": \"1997-12-25\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies/{{producerMovieId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{producerMovieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<movie_id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var producerActorId = pm.collectionVariables.get(\"producerActorId\");",
									"pm.test(\"Response contains actor ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor.id).to.eql(producerActorId);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kevin Costnerr\",\n    \"age\": 66,\n    \"gender\": \"M\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors/{{producerActorId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{producerActorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<movie_id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var producerMovieId = pm.collectionVariables.get(\"producerMovieId\");",
									"pm.test(\"Response contains deleted ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.deleted).to.eql(producerMovieId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/{{producerMovieId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"{{producerMovieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<actor_id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var producerActorId = pm.collectionVariables.get(\"producerActorId\");",
									"pm.test(\"Response contains deleted ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.deleted).to.eql(producerActorId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/{{producerActorId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"{{producerActorId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkpEOGNLVEhFVlR1NkowajhwSjl6TCJ9.eyJpc3MiOiJodHRwczovL2Rldi10eDU5azdhYy51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjA1NTY5NjBhYTc4MDMwMDZhMjA4Zjk2IiwiYXVkIjoiY2FzdGluZ2FnZW5jeSIsImlhdCI6MTYxNjgyMDY5OCwiZXhwIjoxNjE3NDI1NDk4LCJhenAiOiJwdTRwWXdhb056UEZsNTI0RkJaYmtrTmF0dGNPNnJOOSIsImd0eSI6InBhc3N3b3JkIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJnZXQ6YWN0b3ItZGV0YWlsIiwiZ2V0OmFjdG9ycyIsImdldDptb3ZpZS1kZXRhaWwiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiLCJwb3N0Om1vdmllcyJdfQ.GUVldQsBPgGBuDyxxAwfL0VTZqJkkA13uS5aF3qAlMT7oazuGhEdhvIedwKr8a2LduPeBN2Qb3iZTl2g0dyrIhvmNSlY-CHdALUoeaIKLH3hTio4BZJHXxbt3-ZAEPiVZshFJHaFLWS_47D3R209NA_YXYXVTDZI34363kOaV8zXl__fYFnnjXw2aan1lRh82brgkwSPPF0Nslxjp1Nvq1ANOa-TEzsRvJQzfnH6XwdF3fptmU8f1Hyiam6CEfFjeEzF0oC6iWVhe3uGz0rTIp_K68VyVzyXqid9-zkcehrraDOEJ4DI_dIk6lTuXovzs91Xp-7ryfw_SXSZZseiLA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000/api"
		},
		{
			"key": "directorActorId",
			"value": ""
		},
		{
			"key": "producerMovieId",
			"value": ""
		},
		{
			"key": "producerActorId",
			"value": ""
		}
	]
}